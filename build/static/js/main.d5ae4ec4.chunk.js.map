{"version":3,"sources":["components/UI/index.js","util/helpers.js","components/Section/Section.js","components/Category/Category.js","components/Itineraries/Itineraries.js","App.js","serviceWorker.js","GlobalStyle.js","index.js"],"names":["Title","styled","h4","_templateObject","SubTitle","h6","_templateObject2","sortAlphabetically","a","b","text","trim","Wrapper","section","Section_templateObject","ItemsWrapper","ul","Section_templateObject2","ListItem","li","_templateObject3","Item","_ref","children","url","props","Object","objectWithoutProperties","react_default","createElement","href","target","rel","Section","_this$props","this","title","data","normalize","className","sort","map","item","i","Section_Item","key","toLowerCase","split","join","Component","div","Category_templateObject","CategoryName","Category_templateObject2","CategoryItem","Category_templateObject3","Category","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","scrollToMyRef","window","scrollTo","myRef","current","offsetTop","React","createRef","id","name","values","Category_Wrapper","ref","toUpperCase","itinerary","react","Itineraries_templateObject","Filters","Itineraries_templateObject2","FilterLink","Itineraries_templateObject3","active","Itineraries","state","handleScroll","e","preventDefault","setState","_this2","Itineraries_Wrapper","keys","onClick","components_Category_Category","itineraries","result","0-9","c","d","f","g","h","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","firstChar","isNaN","push","categoriseText","App","components_Section_Section","destinations","filter","includes","vacations","components_Itineraries_Itineraries","concat","length","Boolean","location","hostname","match","GlobalStyle","createGlobalStyle","GlobalStyle_templateObject","ReactDOM","render","src_GlobalStyle","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d5ae4ec4.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Title = styled.h4`\n  padding-top: 20px;\n  opacity: 0.9;\n  color: #565967;\n`\n\nexport const SubTitle = styled.h6`\n  font-weight: 600;\n  color: #53576b;\n  padding-bottom: 18px;\n`\n","export const sortAlphabetically = (a, b) => {\n  if (a.text.trim() < b.text.trim()) { // Sort string ascending\n    return -1\n  } else if (a.text.trim() > b.text.trim()) {\n    return 1\n  }\n  return 0 // No sorting\n}\n\n// Returns the data grouped by categories based on starting character\nexport const categoriseText = (data) => {\n  data = data.sort(sortAlphabetically)\n  let result = {\n    '0-9': [],\n    'a': [],\n    'b': [],\n    'c': [],\n    'd': [],\n    'e': [],\n    'f': [],\n    'g': [],\n    'h': [],\n    'i': [],\n    'j': [],\n    'k': [],\n    'l': [],\n    'm': [],\n    'n': [],\n    'o': [],\n    'p': [],\n    'q': [],\n    'r': [],\n    's': [],\n    't': [],\n    'u': [],\n    'v': [],\n    'w': [],\n    'x': [],\n    'y': [],\n    'z': []\n  }\n  data.map((item, i) => {\n    let firstChar = item.text.trim()[0] // Get first character\n    // If number then add to 0-9 key\n    if (!isNaN(firstChar)) {\n      result['0-9'].push(item)\n    } else { // Else add to corresponding character key\n      result[firstChar.toLowerCase()].push(item)\n    }\n  })\n  return result\n}\n\n// Return normalized text\nexport const normalizeText = (text) => {\n  return text.toLowerCase().split('-').join(' ')\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { SubTitle } from 'components/UI'\nimport { sortAlphabetically, normalizeText } from 'util/helpers'\n\nconst Wrapper = styled.section`\n  padding-top: 50px\n`\n\nconst ItemsWrapper = styled.ul`\n  border-top: 1px dashed #ccc;\n  list-style: none;\n  padding-top: 9px;\n  margin-left: 0;\n  margin-right: 0;\n`\n\nconst ListItem = styled.li`\n  font-weight: 300;\n  text-transform: capitalize;\n  opacity: 0.8;\n  padding: 9px 0;\n  word-break: break-word;\n`\n\nconst Item = ({ children, url, ...props }) => {\n  return (\n    <ListItem {...props}>\n      <a href={url} target='_blank' rel='noopener noreferrer'>{children}</a>\n    </ListItem>\n  )\n}\n\nclass Section extends Component {\n  render () {\n    const { title, data, normalize } = this.props\n    return (\n      <Wrapper>\n        <div>\n          <SubTitle>{title}</SubTitle>\n        </div>\n        <ItemsWrapper className='row'>\n          {data.sort(sortAlphabetically).map((item, i) =>\n            <Item\n              key={i}\n              url={item.url}\n              className='col-6 col-sm-4 col-md-3 col-lg-3'\n            >\n              {normalize ? normalizeText(item.text) : item.text}\n            </Item>\n          )}\n        </ItemsWrapper>\n      </Wrapper>\n    )\n  }\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  data: PropTypes.array,\n  // If provided a function is run to normalize the text\n  // by removing any '-' and capitilization\n  normalize: PropTypes.bool\n}\n\nexport default Section\n","import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  padding-top: 40px;\n`\n\nconst CategoryName = styled.div`\n  font-weight: bold;\n  padding-bottom: 20px;\n  font-size: 17px;\n`\n\nconst CategoryItem = styled.a`\n  padding-bottom: 15px;\n  opacity: 0.8;\n  font-size: 15px;\n`\n\nclass Category extends Component {\n  constructor (props) {\n    super(props)\n    this.myRef = React.createRef()\n  }\n\n  // Function to scroll\n  scrollToMyRef = () => window.scrollTo(0, this.myRef.current.offsetTop - 70)\n\n  componentDidUpdate () {\n    // When the parent scrollTo state changes it initiates a rerender\n    // at which point the scroll function is called when the id matches\n    // the scrollTo value\n    if (this.props.id === this.props.scrollTo) {\n      this.scrollToMyRef()\n    }\n  }\n\n  render () {\n    const { name, values } = this.props\n    return (\n      <Wrapper className='row' ref={this.myRef}>\n        <CategoryName className='col-12 col-md-2'>{name.toUpperCase()}</CategoryName>\n        {values.map((itinerary, i) =>\n          <Fragment key={i}>\n            <CategoryItem href={itinerary.url} target='_blank' rel='noopener noreferrer' className='col-12 col-md-5'>\n              {itinerary.text}\n            </CategoryItem>\n            {/* To add space under the category name in desktops */}\n            {i % 2 ? <div className='col-md-2' /> : ''}\n          </Fragment>\n        )}\n      </Wrapper>\n    )\n  }\n}\n\nCategory.propTypes = {\n  name: PropTypes.string,\n  values: PropTypes.array\n}\n\nexport default Category\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nimport { SubTitle } from 'components/UI'\nimport { Category } from 'components/Category'\n\nconst Wrapper = styled.section`\n  padding-top: 50px\n`\n\nconst Filters = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  padding: 15px 0;\n  border-top: 1px dashed #ccc;\n  border-bottom: 1px dashed #ccc;\n  position: sticky;\n  top: 0;\n  background-color: white;\n  z-index: 1;\n  justify-content: center;\n`\n\nconst FilterLink = styled.a`\n  font-weight: bold;\n  padding-right: 18px;\n  color: ${props => props.active ? '#1cad45' : '#2c2f40'};\n  opacity: 1;\n`\n\nclass Itineraries extends Component {\n  state = {\n    scrollTo: ''\n  }\n\n  // Make the clicked category key the current\n  // scrollTo value\n  handleScroll = (scrollTo) => (e) => {\n    e.preventDefault()\n    this.setState({ scrollTo })\n  }\n\n  render () {\n    const { title, data } = this.props\n    return (\n      <Wrapper>\n        <SubTitle>{title}</SubTitle>\n        {/* List of all the filters */}\n        <Filters>\n          {Object.keys(data).map(key =>\n            <FilterLink\n              onClick={this.handleScroll(key)}\n              key={key}\n              href=''\n              active={this.state.scrollTo === key} // Set to active if key is same as current state value\n            >\n              {key.toUpperCase()}\n            </FilterLink>\n          )}\n        </Filters>\n        {/* List of the categories */}\n        {Object.keys(data).map(key =>\n          <Category\n            key={key}\n            id={key}\n            name={key}\n            values={data[key]}\n            scrollTo={this.state.scrollTo}\n          />\n        )}\n      </Wrapper>\n    )\n  }\n}\n\nItineraries.propTypes = {\n  title: PropTypes.string,\n  data: PropTypes.array\n}\n\nexport default Itineraries\n","import React from 'react'\n\nimport { Section } from 'components/Section'\nimport { Itineraries } from 'components/Itineraries'\nimport { Title } from 'components/UI'\n\nimport data from 'data/sample.json'\nimport { categoriseText } from 'util/helpers'\n\n// Initialize outside so does not cause unnecessary rerenders\n// Returns the itineraries organised by category 0-9 and alphabetically\nlet itineraries = categoriseText(data.itineraries)\n\nconst App = () => {\n  return (\n    <div className='container'>\n      <Title>Pickyourtrail sitemap</Title>\n      {/* Destination Section - Show all destinations in alphabetical order */}\n      <Section\n        title='Destinations'\n        data={data.destinations.filter(item => item.url.includes('/packages/'))} // Only main packages\n      />\n      {/* Themed Vacations Section - Show all themed vacations in alphabetical order */}\n      <Section\n        title='Themed vacations'\n        data={data.vacations}\n        normalize\n      />\n      {/* Show all section - All pages grouped by starting letter numerically and alphabetically */}\n      <Itineraries\n        title={`Showing all ${data.itineraries.length} pages`}\n        data={itineraries}\n      />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Resets and other global styles\n\nimport { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  html, ul, ol, li, form, fieldset, legend\n  {\n    scroll-behavior: smooth;\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: 'Source Sans Pro', sans-serif;\n    font-size: 1em;\n    line-height: 1.5em;\n    color: #2c2f42;\n  }\n\n  h1, h2, h3, h4, h5, h6, p { margin-top: 0; margin-bottom: 0; line-height: 1em }\n\n  fieldset,img { border: 0; }\n\n  legend { color: #000; }\n\n  sup { vertical-align: text-top; }\n\n  sub { vertical-align: text-bottom; }\n\n  table\n  {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n\n  caption, th, td\n  {\n    text-align: left;\n    vertical-align: top;\n    font-weight: normal;\n  }\n\n  input, textarea, select\n  {\n    font-size: 110%;\n    line-height: 1.1;\n  }\n\n  abbr, acronym\n  {\n    border-bottom: .1em dotted;\n    cursor: help;\n  }\n\n  a {\n    color: #595c69;\n    opacity: 0.9;\n    text-decoration: none;\n  }\n\n  a:active, a:hover {\n    color: #1cad45;\n    text-decoration: none;\n  }\n`\nexport default GlobalStyle\n","import React, { Fragment } from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport GlobalStyle from './GlobalStyle.js' // Global CSS styles\n\nReactDOM.render(\n  <Fragment>\n    <GlobalStyle />\n    <App />\n  </Fragment>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}